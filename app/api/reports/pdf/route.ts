import { type NextRequest, NextResponse } from "next/server"
import { verifyAuth } from "@/lib/auth"

export async function GET(request: NextRequest) {
  try {
    const auth = await verifyAuth(request)
    if (!auth) {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 })
    }

    const reportData = {
      user: {
        name: "Demo User",
        email: auth.email,
        userType: auth.userType,
        generatedAt: new Date().toISOString()
      },
      wallet: {
        kesBalance: 45250.75,
        usdBalance: 312.50,
        pendingBalance: 2500.00,
        totalEarnings: 125000.00,
        totalSpent: 79749.25,
      },
      transactions: [
        {
          id: "1",
          type: "credit",
          category: "gig_payment",
          amount: 5000.00,
          currency: "KES",
          description: "Website design project",
          status: "completed",
          createdAt: new Date().toISOString(),
        },
        {
          id: "2",
          type: "debit",
          category: "withdrawal",
          amount: 2000.00,
          currency: "KES",
          description: "M-Pesa withdrawal",
          status: "completed",
          createdAt: new Date(Date.now() - 86400000).toISOString(),
        },
      ],
      creditScore: {
        score: 725,
        rating: "Very Good",
        factors: {
          gigConsistency: 85,
          paymentHistory: 92,
          financialHealth: 78,
        }
      },
      sacco: {
        totalContributions: 15000.00,
        availableLoanAmount: 45000.00,
      }
    }

    const html = `<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Stabilisha Financial Report</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; color: #333; }
        .header { text-align: center; border-bottom: 2px solid #8B5CF6; padding-bottom: 20px; margin-bottom: 30px; }
        .logo { font-size: 24px; font-weight: bold; color: #8B5CF6; }
        .section { margin-bottom: 30px; }
        .section h2 { color: #8B5CF6; border-bottom: 1px solid #E5E7EB; padding-bottom: 10px; }
        .grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; }
        .card { border: 1px solid #E5E7EB; border-radius: 8px; padding: 15px; }
        .amount { font-size: 18px; font-weight: bold; color: #059669; }
        table { width: 100%; border-collapse: collapse; margin-top: 10px; }
        th, td { padding: 8px; text-align: left; border-bottom: 1px solid #E5E7EB; }
        th { background-color: #F9FAFB; font-weight: bold; }
        .footer { margin-top: 40px; text-align: center; font-size: 12px; color: #6B7280; }
        @media print { body { margin: 0; } }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">STABILISHA</div>
        <h1>Financial Report</h1>
        <p>Generated on ${new Date(reportData.user.generatedAt).toLocaleDateString()}</p>
        <p><strong>${reportData.user.name}</strong> (${reportData.user.email})</p>
    </div>

    <div class="section">
        <h2>Wallet Overview</h2>
        <div class="grid">
            <div class="card">
                <h3>Available Balance</h3>
                <div class="amount">KES ${reportData.wallet.kesBalance.toLocaleString()}</div>
                <p>USD $${reportData.wallet.usdBalance.toLocaleString()}</p>
            </div>
            <div class="card">
                <h3>Total Earnings</h3>
                <div class="amount">KES ${reportData.wallet.totalEarnings.toLocaleString()}</div>
            </div>
        </div>
    </div>

    <div class="section">
        <h2>Recent Transactions</h2>
        <table>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Type</th>
                    <th>Description</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody>
                ${reportData.transactions.map((tx: any) => `
                    <tr>
                        <td>${new Date(tx.createdAt).toLocaleDateString()}</td>
                        <td>${tx.type}</td>
                        <td>${tx.description}</td>
                        <td>${tx.currency} ${tx.amount.toLocaleString()}</td>
                    </tr>
                `).join('')}
            </tbody>
        </table>
    </div>

    <div class="section">
        <h2>Credit Score</h2>
        <div class="card">
            <h3>Current Score: ${reportData.creditScore.score}</h3>
            <p>Rating: ${reportData.creditScore.rating}</p>
        </div>
    </div>

    <div class="footer">
        <p>Generated by Stabilisha - Gig Worker Financial Platform</p>
    </div>
</body>
</html>`
    
    return new NextResponse(html, {
      headers: {
        'Content-Type': 'text/html',
        'Content-Disposition': 'attachment; filename="stabilisha-financial-report.html"'
      }
    })

  } catch (error) {
    console.error("[v0] PDF report error:", error)
    return NextResponse.json({ error: "Internal server error" }, { status: 500 })
  }
}